{"version":3,"sources":["ListItem.js","CompletedTasks.js","DeletedTasks.js","AddItem.js","App.js","index.js"],"names":["ListItem","handleCompleteTick","props","updateTaskFunc","id","handleDeleteTick","className","onClick","this","text","align","date","React","Component","CompletedTasks","handleTick","itemsToRemoveFunc","type","value","DeletedTasks","AddItem","state","newTaskText","newTaskDate","updateTaskText","event","setState","target","updateTaskDate","handleClick","today","require","moment","format","alert","addTaskFunc","placeholder","onChange","App","tasks","removeTaskArray","addTask","taskText","taskDate","newTask","status","uuid","axios","post","then","response","console","log","catch","error","tasksCopy","slice","push","updateTask","newStatus","tasksUpdated","map","item","put","itemsToRemove","removeIds","handleRemove","window","confirm","forEach","delete","tempArray","filter","check","document","getElementsByTagName","i","length","checked","get","data","prevProps","newTasks","sort","a","b","completedTasks","deletedTasks","Date","toDateString","substring","key","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5765de06.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ListItem.css\";\n\nclass ListItem extends React.Component {\n\n  handleCompleteTick = () => {\n    this.props.updateTaskFunc(this.props.id, \"C\");\n  }\n  handleDeleteTick = () => {\n    this.props.updateTaskFunc(this.props.id, \"D\");\n  }\n\n  render()\n   {  \n    return (\n\n     <div className=\"row padditemrow\">\n        <div className=\"col-1 col-lg-1 align=left\">\n           <i className=\"fa fa-trash fa-1x\" onClick={this.handleDeleteTick}/> \n        </div>\n        <div className=\"col-6 col-lg-7 col-blue\">\n          <div>\n            <li>\n              {this.props.text}   \n            </li>\n          </div>\n        </div>\n        <div className=\"col-4 col-lg-3 col-blue\">\n          <div className=\"dateSize\" align=\"right\">\n              {this.props.date}   \n          </div>\n        </div>\n        <div className=\"col-1 col-lg-1 justify-right\">\n          <i className=\"fa fa-check\" onClick={this.handleCompleteTick}/>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ListItem;","import React from \"react\";\nimport \"./CompletedTasks.css\";\n\nclass CompletedTasks extends React.Component {\n  // build up an array of item ids to be remove\n  handleTick = () => {\n\n    this.props.itemsToRemoveFunc(this.props.id)\n  }\n\n  render() {\n    return (\n\n      <div className=\"row\">\n        <div className=\"col-10 col-yell col-lg-10\">\n          {/* <h4>Completed Items</h4> */}\n          <li>\n            {this.props.text}\n          </li>\n        </div>\n        <div className=\"col-2 col-lg-2 justify-right\">\n          <input className=\"form-check-input paddleft\"\n            type=\"checkbox\"\n            id=\"defaultCheck4\"\n            value=\"option1\"\n            onClick={this.handleTick} />\n        </div>\n      </div>\n    );\n  };\n};\nexport default CompletedTasks;\n\n","import React from \"react\";\nimport \"./DeletedTasks.css\";\n\nclass DeletedTasks extends React.Component {\n\n  handleTick = () => {\n    \n    this.props.itemsToRemoveFunc(this.props.id);\n   }\n  \n   render() \n  \n  {\n   \n    return (\n      <div className=\"row\">\n        <div className=\"col-10 col-red col-lg-10\">\n          <li>\n            {this.props.text}\n          </li>\n        </div>\n\n        <div className=\"col-2 col-lg-2\">\n          <input className=\"form-check-input paddleft\"\n            type=\"checkbox\"\n            id=\"defaultCheck5\"\n            value=\"option1\"\n            onClick={this.handleTick} />\n        </div>\n      </div>\n    );\n  };\n};\nexport default DeletedTasks;","import React from \"react\";\nimport \"./AddItem.css\";\n\nclass AddItem extends React.Component {\n  state = {\n    newTaskText: \"\",\n    newTaskDate: \"\"\n  }\n  updateTaskText = (event) => {\n    this.setState({\n      newTaskText: event.target.value\n    })\n  }\n  updateTaskDate = (event) => {\n    this.setState({\n      newTaskDate: event.target.value\n    })\n  }\n\n  handleClick = () => {\n    // Set the date for the New task \n    let moment = require('moment')\n    let today = moment().format('YYYY-MM-DD')\n    if (this.state.newTaskText === \"\") {\n      alert(\"ERROR: You must enter some text before pressing the ADD button\");\n    }\n    if (this.state.newTaskDate === \"\") {\n      alert(\"ERROR: You must enter a date before pressing the ADD button\");\n      return;\n    }\n    if (this.state.newTaskDate <= today) {\n      alert(\"ERROR: The date must not be earlier than today\");\n      return;\n    }\n    this.props.addTaskFunc(this.state.newTaskText, this.state.newTaskDate);\n    this.setState({\n      newTaskText: \"\",\n      newTaskDate: \"\"\n    });\n  };\n  render() {\n    return (\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-3\">\n            <h5 align=\"left\"> What do you need to do?</h5>\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              id=\"addItemInput\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"E.g. take out bins\"\n              value={this.state.newTaskText}\n              onChange={this.updateTaskText} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-3\">\n            <h5 align=\"left\"> When do you need it by?</h5>\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              id=\"addDateInput\"\n              type=\"date\"\n              className=\"duedate\"\n              value={this.state.newTaskDate}\n              onChange={this.updateTaskDate} />\n          </div>\n        </div>\n        <div className=\"row paddingbelow \">\n          <div className=\"col-3 col-lg-3\" />\n          <div className=\"col-9 col-lg-9\">\n            <div>\n              <button className=\"btn btn-warning\"\n                onClick={this.handleClick}>Add\n              </button>\n            </div>\n          </div>\n        </div>\n      </section >\n    );\n  }\n}\n\nexport default AddItem;","import React from 'react';\nimport ListItem from \"./ListItem\";\nimport CompletedTasks from \"./CompletedTasks\";\nimport DeletedTasks from \"./DeletedTasks\";\nimport AddItem from \"./AddItem\";\nimport './App.css';\nimport uuid from \"uuid/v4\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    removeTaskArray: []\n  }\n\n  componentDidMount() {\n    //Make async request to get data\n    axios.get('https://9dcour1we6.execute-api.eu-west-2.amazonaws.com/dev/tasks')\n      .then((response) => {\n        // handle success\n        this.setState({\n          tasks: response.data.tasks\n        })\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n  };\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    // if (this.props.userID !== prevProps.userID) {\n    //   this.fetchData(this.props.userID);\n    // }\n    axios.get('https://9dcour1we6.execute-api.eu-west-2.amazonaws.com/dev/tasks')\n      .then((response) => {\n        // handle success\n        this.setState({\n          tasks: response.data.tasks\n        })\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n\n  };\n\n  //function to update the tasks with the \n  //Add that task to the state\n  addTask = (taskText, taskDate) => {\n\n    // Set the date for the New task \n    // let moment = require('moment')\n    // let myDate = moment().format('YYYY-MM-DD')\n\n    //Create a new task wtih default status\n    const newTask = {\n      text: taskText,\n      status: \"N\",\n      date: taskDate,\n      id: uuid\n    };\n    //Insert the new task into the database\n    axios.post('https://9dcour1we6.execute-api.eu-west-2.amazonaws.com/dev/tasks', newTask)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    const tasksCopy = this.state.tasks.slice();\n    //Make a copy of the tasks array\n    //never do this.stat.tasks.push item and access it direactly as this causese\n    //a problem\n\n    tasksCopy.push(newTask);\n    this.setState({\n      tasks: tasksCopy\n    });\n  }\n\n  updateTask = (id, newStatus) => {\n    const tasksUpdated = this.state.tasks.map(item => {\n\n      if (item.id === id) {\n        item.status = newStatus\n\n        // Update the status on the database  \n        axios.put('https://9dcour1we6.execute-api.eu-west-2.amazonaws.com/dev/tasks/' + id + \"/\" + newStatus)\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n      return item;\n    })\n\n    this.setState({\n      tasks: tasksUpdated\n    });\n  }\n\n  itemsToRemove = (id) => {\n    const removeIds = this.state.removeTaskArray.slice();\n    removeIds.push(id);\n\n    this.setState({\n      removeTaskArray: removeIds\n    });\n  }\n\n  handleRemove = () => {\n    //alert(\"Are you sure?\");\n    if (window.confirm(\"Are you sure you want to permenantly remove these item?\")) {\n      //I found the easiest way to remove the items was to update the sata and use\n      // .filter\n      // this.state.removeTaskArray.map(id => {\n      //   return this.updateTask(id, \"R\");\n      // })\n\n      // Delete the status on the database \n\n      this.state.removeTaskArray.forEach(id => {\n\n        axios.delete('https://9dcour1we6.execute-api.eu-west-2.amazonaws.com/dev/tasks/' + id)\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      })\n      // let tempArray = this.state.tasks.filter(item => item.status !== \"R\");\n      let tempArray = this.state.tasks.filter(item => item.status !== \"R\");\n      //  let tempArray = this.state.tasks.slice;\n      this.setState({\n        tasks: tempArray\n      });\n    }\n    else {\n      // Need to untick check box if the user has cancelled\n      // let check = document.getElementById(\"defaultCheck5\").checked = false\n\n      let check = document.getElementsByTagName('input');\n\n      for (let i = 0; i < check.length; i++) {\n        if (check[i].type === \"checkbox\") {\n          check[i].checked = false;\n        }\n      }\n    }\n    // Last step we need to clear the array of items to be removed      \n\n    this.setState({\n      removeTaskArray: []\n    });\n  }\n  //Every component must have a render method\n  render() {\n    //Sort the data in date order\n    let sorted = this.state.tasks.sort(function (a, b) {\n      if (a.date < b.date) {\n        return -1;\n      }\n      if (a.date > b.date) {\n        return 1;\n      }\n      // dates must be equal\n      return 0;\n    });\n\n    const newTasks = sorted.filter(item => item.status === \"N\")\n    const completedTasks = this.state.tasks.filter(item => item.status === \"C\")\n    const deletedTasks = this.state.tasks.filter(item => item.status === \"D\")\n\n    return (\n      <div className=\"container\">\n        <div className=\"row paddingbelow\">\n          <div className=\"col-12 col-lg-8\">\n            <h2 align=\"right\">Lists Lists Lists (L3)</h2>\n          </div>\n          <div className=\"col-12 col-lg-4 align=right\">\n             <h4>{new Date().toDateString()}</h4>\n          </div>\n        </div>\n        <div>\n            <AddItem addTaskFunc={this.addTask} />\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-1 col-lg-1\">\n            <p align=\"right\">\n              Delete\n            </p>\n          </div>\n          <div className=\"col-10 col-lg-6\">\n            <h3 align=\"center\">\n              {newTasks.length} Things To Do\n            </h3>\n          </div>\n          <div className=\"col-1 col-lg-1\">\n            <p align=\"center\">\n              Complete\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-8\" >\n            <ol>\n              {newTasks.map(item => {\n                return <ListItem\n                  updateTaskFunc={this.updateTask}\n                  text={item.text}\n                  status={item.status}\n                  date={item.date.substring(0, 10)}\n                  id={item.id}\n                  key={item.id}\n                />\n              })}\n            </ol>\n          </div>\n          <div className=\"col-12 col-lg-4 border border-secondary border-thick\" >\n            <div className=\"row justify-content-center\">\n              <h4> Completed Tasks</h4>\n            </div>\n            <ol>\n              {completedTasks.map(item => {\n                return <CompletedTasks\n                  itemsToRemoveFunc={this.itemsToRemove}\n                  text={item.text}\n                  status={item.status}\n                  date={item.date}\n                  id={item.id}\n                  key={item.id} />\n              })}\n            </ol>\n            <div className=\"row justify-content-center\">\n              <h4> Deleted Tasks</h4>\n            </div>\n            <ol>\n              {deletedTasks.map(item => {\n                return <DeletedTasks\n                  itemsToRemoveFunc={this.itemsToRemove}\n                  text={item.text}\n                  status={item.status}\n                  date={item.date}\n                  id={item.id}\n                  key={item.id} />\n              })}\n            </ol>\n            <div className=\"row justify-content-center\">\n              <h4>Select Items to Remove</h4>\n            </div>\n            <div className=\"row justify-content-center\">\n              <button type=\"button\"\n                className=\"btn btn-warning\"\n                onClick={this.handleRemove}>\n                Remove\n              </button>\n            </div>\n          </div>\n        </div>\n        <footer className=\"container-fluid\">\n          <p>Website created by KP Creations</p>\n        </footer>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}